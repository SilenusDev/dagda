{
  "manifest": {
    "name": "baseline-browser-mapping",
    "main": "./dist/index.cjs",
    "version": "2.8.6",
    "description": "A library for obtaining browser versions with their maximum supported Baseline feature set and Widely Available status.",
    "exports": {
      ".": {
        "require": "./dist/index.cjs",
        "types": "./dist/index.d.ts",
        "default": "./dist/index.js"
      },
      "./legacy": {
        "require": "./dist/index.cjs",
        "types": "./dist/index.d.ts"
      }
    },
    "jsdelivr": "./dist/index.js",
    "files": [
      "dist/*",
      "!dist/scripts/*",
      "LICENSE.txt",
      "README.md"
    ],
    "types": "./dist/index.d.ts",
    "type": "module",
    "bin": {
      "baseline-browser-mapping": "dist/cli.js"
    },
    "scripts": {
      "fix-cli-permissions": "output=$(npx baseline-browser-mapping 2>&1); path=$(printf '%s\n' \"$output\" | sed -n 's/^sh: \\(.*\\): Permission denied$/\\1/p'); if [ -n \"$path\" ]; then echo \"Permission denied for: $path\"; echo \"Removing $path ...\"; rm -rf \"$path\"; else echo \"$output\"; fi",
      "test:format": "npx prettier --check .",
      "test:lint": "npx eslint .",
      "test:bcb": "mkdir test-bcb && cd test-bcb && npm init -y && npm i ../../baseline-browser-mapping browserslist browserslist-config-baseline &&jq '. += {\"browserslist\":[\"extends browserslist-config-baseline\"]}' package.json >p && mv p package.json && npx browserslist && cd ../ && rm -rf test-bcb",
      "test:jasmine": "npx jasmine",
      "test": "npm run build && npm run fix-cli-permissions && rm -rf test-bcb && npm run test:format && npm run test:lint && npx jasmine && npm run test:bcb",
      "build": "rm -rf dist; npx prettier . --write; rollup -c; rm -rf ./dist/scripts/expose-data.d.ts ./dist/cli.d.ts",
      "refresh-downstream": "npx tsx scripts/refresh-downstream.ts",
      "refresh-static": "npx tsx scripts/refresh-static.ts",
      "update-data-file": "npx tsx scripts/update-data-file.ts; npx prettier ./src/data/data.js --write",
      "update-data-dependencies": "npm i @mdn/browser-compat-data@latest web-features@latest -D",
      "check-data-changes": "git diff --name-only | grep -q '^src/data/data.js$' && echo 'changes-available=TRUE' || echo 'changes-available=FALSE'"
    },
    "license": "Apache-2.0",
    "devDependencies": {
      "@mdn/browser-compat-data": "^7.1.6",
      "@rollup/plugin-terser": "^0.4.4",
      "@rollup/plugin-typescript": "^12.1.3",
      "@types/node": "^22.15.17",
      "eslint-plugin-new-with-error": "^5.0.0",
      "jasmine": "^5.8.0",
      "jasmine-spec-reporter": "^7.0.0",
      "prettier": "^3.5.3",
      "rollup": "^4.44.0",
      "tslib": "^2.8.1",
      "typescript": "^5.7.2",
      "typescript-eslint": "^8.35.0",
      "web-features": "^3.0.0"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/web-platform-dx/baseline-browser-mapping.git"
    },
    "_registry": "npm",
    "_loc": "/yarn-cache/v6/npm-baseline-browser-mapping-2.8.6-c37dea4291ed8d01682f85661dbe87967028642e-integrity/node_modules/baseline-browser-mapping/package.json",
    "readmeFilename": "README.md",
    "readme": "# [`baseline-browser-mapping`](https://github.com/web-platform-dx/web-features/packages/baseline-browser-mapping)\n\nBy the [W3C WebDX Community Group](https://www.w3.org/community/webdx/) and contributors.\n\n`baseline-browser-mapping` provides:\n\n- An `Array` of browsers compatible with Baseline Widely available and Baseline year feature sets via the [`getCompatibleVersions()` function](#get-baseline-widely-available-browser-versions-or-baseline-year-browser-versions).\n- An `Array`, `Object` or `CSV` as a string describing the Baseline feature set support of all browser versions included in the module's data set via the [`getAllVersions()` function](#get-data-for-all-browser-versions).\n\nYou can use `baseline-browser-mapping` to help you determine minimum browser version support for your chosen Baseline feature set; or to analyse the level of support for different Baseline feature sets in your site's traffic by joining the data with your analytics data.\n\n## Install for local development\n\nTo install the package, run:\n\n`npm install --save-dev baseline-browser-mapping`\n\n`baseline-browser-mapping` depends on `web-features` and `@mdn/browser-compat-data` for core browser version selection, but the data is pre-packaged and minified. This package checks for updates to those modules and the supported [downstream browsers](#downstream-browsers) on a daily basis and is updated frequently. Consider adding a script to your `package.json` to update `basesline-browser-mapping` and using it as part of your build process to ensure your data is as up to date as possible:\n\n```javascript\n\"scripts\": [\n  \"refresh-baseline-browser-mapping\": \"npm i --save-dev baseline-browser-mapping@latest\"\n]\n```\n\nIf your installed version of `baseline-browser-mapping` is greater than 2 months old, you will receive a console warning advising you to update to the latest version.\n\n## Importing `baseline-browser-mapping`\n\nThis module exposes two functions: `getCompatibleVersions()` and `getAllVersions()`, both which can be imported directly from `baseline-browser-mapping`:\n\n```javascript\nimport {\n  getCompatibleVersions,\n  getAllVersions,\n} from \"baseline-browser-mapping\";\n```\n\nIf you want to load the script and data directly in a web page without hosting it yourself, consider using a CDN:\n\n```html\n<script type=\"module\">\n  import {\n    getCompatibleVersions,\n    getAllVersions,\n  } from \"https://cdn.jsdelivr.net/npm/baseline-browser-mapping\";\n</script>\n```\n\n## Get Baseline Widely available browser versions or Baseline year browser versions\n\nTo get the current list of minimum browser versions compatible with Baseline Widely available features from the core browser set, call the `getCompatibleVersions()` function:\n\n```javascript\ngetCompatibleVersions();\n```\n\nExecuted on 7th March 2025, the above code returns the following browser versions:\n\n```javascript\n[\n  { browser: \"chrome\", version: \"105\", release_date: \"2022-09-02\" },\n  {\n    browser: \"chrome_android\",\n    version: \"105\",\n    release_date: \"2022-09-02\",\n  },\n  { browser: \"edge\", version: \"105\", release_date: \"2022-09-02\" },\n  { browser: \"firefox\", version: \"104\", release_date: \"2022-08-23\" },\n  {\n    browser: \"firefox_android\",\n    version: \"104\",\n    release_date: \"2022-08-23\",\n  },\n  { browser: \"safari\", version: \"15.6\", release_date: \"2022-09-02\" },\n  {\n    browser: \"safari_ios\",\n    version: \"15.6\",\n    release_date: \"2022-09-02\",\n  },\n];\n```\n\n> [!NOTE]\n> The minimum versions of each browser are not necessarily the final release before the Widely available cutoff date of `TODAY - 30 MONTHS`. Some earlier versions will have supported the full Widely available feature set.\n\n### `getCompatibleVersions()` configuration options\n\n`getCompatibleVersions()` accepts an `Object` as an argument with configuration options. The defaults are as follows:\n\n```javascript\n{\n  targetYear: undefined,\n  widelyAvailableOnDate: undefined,\n  includeDownstreamBrowsers: false,\n  listAllCompatibleVersions: false\n}\n```\n\n#### `targetYear`\n\nThe `targetYear` option returns the minimum browser versions compatible with all **Baseline Newly available** features at the end of the specified calendar year. For example, calling:\n\n```javascript\ngetCompatibleVersions({\n  targetYear: 2020,\n});\n```\n\nReturns the following versions:\n\n```javascript\n[\n  { browser: \"chrome\", version: \"87\", release_date: \"2020-11-19\" },\n  {\n    browser: \"chrome_android\",\n    version: \"87\",\n    release_date: \"2020-11-19\",\n  },\n  { browser: \"edge\", version: \"87\", release_date: \"2020-11-19\" },\n  { browser: \"firefox\", version: \"83\", release_date: \"2020-11-17\" },\n  {\n    browser: \"firefox_android\",\n    version: \"83\",\n    release_date: \"2020-11-17\",\n  },\n  { browser: \"safari\", version: \"14\", release_date: \"2020-09-16\" },\n  { browser: \"safari_ios\", version: \"14\", release_date: \"2020-09-16\" },\n];\n```\n\n> [!NOTE]\n> The minimum version of each browser is not necessarily the final version released in that calendar year. In the above example, Firefox 84 was the final version released in 2020; however Firefox 83 supported all of the features that were interoperable at the end of 2020.\n> [!WARNING]\n> You cannot use `targetYear` and `widelyAavailableDate` together. Please only use one of these options at a time.\n\n#### `widelyAvailableOnDate`\n\nThe `widelyAvailableOnDate` option returns the minimum versions compatible with Baseline Widely available on a specified date in the format `YYYY-MM-DD`:\n\n```javascript\ngetCompatibleVersions({\n  widelyAvailableOnDate: `2023-04-05`,\n});\n```\n\n> [!TIP]\n> This option is useful if you provide a versioned library that targets Baseline Widely available on each version's release date and you need to provide a statement on minimum supported browser versions in your documentation.\n\n#### `includeDownstreamBrowsers`\n\nSetting `includeDownstreamBrowsers` to `true` will include browsers outside of the Baseline core browser set where it is possible to map those browsers to an upstream Chromium or Gecko version:\n\n```javascript\ngetCompatibleVersions({\n  includeDownstreamBrowsers: true,\n});\n```\n\nFor more information on downstream browsers, see [the section on downstream browsers](#downstream-browsers) below.\n\n#### `includeKaiOS`\n\nKaiOS is an operating system and app framework based on the Gecko engine from Firefox. KaiOS is based on the Gecko engine and feature support can be derived from the upstream Gecko version that each KaiOS version implements. However KaiOS requires other considerations beyond feature compatibility to ensure a good user experience as it runs on device types that do not have either mouse and keyboard or touch screen input in the way that all the other browsers supported by this module do.\n\n```javascript\ngetCompatibleVersions({\n  includeDownstreamBrowsers: true,\n  includeKaiOS: true,\n});\n```\n\n> [!NOTE]\n> Including KaiOS requires you to include all downstream browsers using the `includeDownstreamBrowsers` option.\n\n#### `listAllCompatibleVersions`\n\nSetting `listAllCompatibleVersions` to true will include the minimum versions of each compatible browser, and all the subsequent versions:\n\n```javascript\ngetCompatibleVersions({\n  listAllCompatibleVersions: true,\n});\n```\n\n## Get data for all browser versions\n\nYou may want to obtain data on all the browser versions available in this module for use in an analytics solution or dashboard. To get details of each browser version's level of Baseline support, call the `getAllVersions()` function:\n\n```javascript\nimport { getAllVersions } from \"baseline-browser-mapping\";\n\ngetAllVersions();\n```\n\nBy default, this function returns an `Array` of `Objects` and excludes downstream browsers:\n\n```javascript\n[\n  ...\n  {\n    browser: \"firefox_android\", // Browser name\n    version: \"125\", // Browser version\n    release_date: \"2024-04-16\", // Release date\n    year: 2023, // Baseline year feature set the version supports\n    wa_compatible: true // Whether the browser version supports Widely available\n  },\n  ...\n]\n```\n\nFor browser versions in `@mdn/browser-compat-data` that were released before Baseline can be defined, i.e. Baseline 2015, the `year` property is always the string: `\"pre_baseline\"`.\n\n### Understanding which browsers support Newly available features\n\nYou may want to understand which recent browser versions support all Newly available features. You can replace the `wa_compatible` property with a `supports` property using the `useSupport` option:\n\n```javascript\ngetAllVersions({\n  useSupports: true,\n});\n```\n\nThe `supports` property is optional and has two possible values:\n\n- `widely` for browser versions that support all Widely available features.\n- `newly` for browser versions that support all Newly available features.\n\nBrowser versions that do not support Widely or Newly available will not include the `support` property in the `array` or `object` outputs, and in the CSV output, the `support` column will contain an empty string. Browser versions that support all Newly available features also support all Widely available features.\n\n### `getAllVersions()` Configuration options\n\n`getAllVersions()` accepts an `Object` as an argument with configuration options. The defaults are as follows:\n\n```javascript\n{\n  includeDownstreamBrowsers: false,\n  outputFormat: \"array\"\n}\n```\n\n#### `includeDownstreamBrowsers` (in `getAllVersions()` output)\n\nAs with `getCompatibleVersions()`, you can set `includeDownstreamBrowsers` to `true` to include the Chromium and Gecko downstream browsers [listed below](#list-of-downstream-browsers).\n\n```javascript\ngetAllVersions({\n  includeDownstreamBrowsers: true,\n});\n```\n\nDownstream browsers include the same properties as core browsers, as well as the `engine`they use and `engine_version`, for example:\n\n```javascript\n[\n  ...\n  {\n    browser: \"samsunginternet_android\",\n    version: \"27.0\",\n    release_date: \"2024-11-06\",\n    engine: \"Blink\",\n    engine_version: \"125\",\n    year: 2023,\n    supports: \"widely\"\n  },\n  ...\n]\n```\n\n#### `includeKaiOS` (in `getAllVersions()` output)\n\nAs with `getCompatibleVersions()` you can include KaiOS in your output. The same requirement to have `includeDownstreamBrowsers: true` applies.\n\n```javascript\ngetAllVersions({\n  includeDownstreamBrowsers: true,\n  includeKaiOS: true,\n});\n```\n\n#### `outputFormat`\n\nBy default, this function returns an `Array` of `Objects` which can be manipulated in Javascript or output to JSON.\n\nTo return an `Object` that nests keys , set `outputFormat` to `object`:\n\n```javascript\ngetAllVersions({\n  outputFormat: \"object\",\n});\n```\n\nIn thise case, `getAllVersions()` returns a nested object with the browser [IDs listed below](#list-of-downstream-browsers) as keys, and versions as keys within them:\n\n```javascript\n{\n  \"chrome\": {\n    \"53\": {\n      \"year\": 2016,\n      \"release_date\": \"2016-09-07\"\n    },\n    ...\n}\n```\n\nDownstream browsers will include extra fields for `engine` and `engine_versions`\n\n```javascript\n{\n  ...\n  \"webview_android\": {\n    \"53\": {\n      \"year\": 2016,\n      \"release_date\": \"2016-09-07\",\n      \"engine\": \"Blink\",\n      \"engine_version\": \"53\"\n    },\n  ...\n}\n```\n\nTo return a `String` in CSV format, set `outputFormat` to `csv`:\n\n```javascript\ngetAllVersions({\n  outputFormat: \"csv\",\n});\n```\n\n`getAllVersions` returns a `String` with a header row and comma-separated values for each browser version that you can write to a file or pass to another service. Core browsers will have \"NULL\" as the value for their `engine` and `engine_version`:\n\n```csv\n\"browser\",\"version\",\"year\",\"supports\",\"release_date\",\"engine\",\"engine_version\"\n...\n\"chrome\",\"24\",\"pre_baseline\",\"\",\"2013-01-10\",\"NULL\",\"NULL\"\n...\n\"chrome\",\"53\",\"2016\",\"\",\"2016-09-07\",\"NULL\",\"NULL\"\n...\n\"firefox\",\"135\",\"2024\",\"widely\",\"2025-02-04\",\"NULL\",\"NULL\"\n\"firefox\",\"136\",\"2024\",\"newly\",\"2025-03-04\",\"NULL\",\"NULL\"\n...\n\"ya_android\",\"20.12\",\"2020\",\"year_only\",\"2020-12-20\",\"Blink\",\"87\"\n...\n```\n\n> [!NOTE]\n> The above example uses `\"includeDownstreamBrowsers\": true`\n\n### Static resources\n\nThe outputs of `getAllVersions()` are available as JSON or CSV files generated on a daily basis and hosted on GitHub pages:\n\n- Core browsers only\n  - [Array](https://web-platform-dx.github.io/baseline-browser-mapping/all_versions_array.json)\n  - [Object](https://web-platform-dx.github.io/baseline-browser-mapping/all_versions_object.json)\n  - [CSV](https://web-platform-dx.github.io/baseline-browser-mapping/all_versions.csv)\n- Core browsers only, with `supports` property\n  - [Array](https://web-platform-dx.github.io/baseline-browser-mapping/all_versions_array_with_supports.json)\n  - [Object](https://web-platform-dx.github.io/baseline-browser-mapping/all_versions_object_with_supports.json)\n  - [CSV](https://web-platform-dx.github.io/baseline-browser-mapping/all_versions_with_supports.csv)\n- Including downstream browsers\n  - [Array](https://web-platform-dx.github.io/baseline-browser-mapping/with_downstream/all_versions_array.json)\n  - [Object](https://web-platform-dx.github.io/baseline-browser-mapping/with_downstream/all_versions_object.json)\n  - [CSV](https://web-platform-dx.github.io/baseline-browser-mapping/with_downstream/all_versions.csv)\n- Including downstream browsers with `supports` property\n  - [Array](https://web-platform-dx.github.io/baseline-browser-mapping/with_downstream/all_versions_array_with_supports.json)\n  - [Object](https://web-platform-dx.github.io/baseline-browser-mapping/with_downstream/all_versions_object_with_supports.json)\n  - [CSV](https://web-platform-dx.github.io/baseline-browser-mapping/with_downstream/all_versions_with_supports.csv)\n\nThese files are updated on a daily basis.\n\n## CLI\n\n`baseline-browser-mapping` includes a command line interface that exposes the same data and options as the `getCompatibleVersions()` function. To learn more about using the CLI, run:\n\n```sh\nnpx baseline-browser-mapping --help\n```\n\n## Downstream browsers\n\n### Limitations\n\nThe browser versions in this module come from two different sources:\n\n- MDN's `browser-compat-data` module.\n- Parsed user agent strings provided by [useragents.io](https://useragents.io/)\n\nMDN `browser-compat-data` is an authoritative source of information for the browsers it contains. The release dates for the Baseline core browser set and the mapping of downstream browsers to Chromium versions should be considered accurate.\n\nBrowser mappings from useragents.io are provided on a best effort basis. They assume that browser vendors are accurately stating the Chromium version they have implemented. The initial set of version mappings was derived from a bulk export in November 2024. This version was iterated over with a Regex match looking for a major Chrome version and a corresponding version of the browser in question, e.g.:\n\n`Mozilla/5.0 (Linux; U; Android 10; en-US; STK-L21 Build/HUAWEISTK-L21) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/100.0.4896.58 UCBrowser/13.8.2.1324 Mobile Safari/537.36`\n\nShows UC Browser Mobile 13.8 implementing Chromium 100, and:\n\n`Mozilla/5.0 (Linux; arm_64; Android 11; Redmi Note 8 Pro) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.6613.123 YaBrowser/24.10.2.123.00 SA/3 Mobile Safari/537.36`\n\nShows Yandex Browser Mobile 24.10 implementing Chromium 128. The Chromium version from this string is mapped to the corresponding Chrome version from MDN `browser-compat-data`.\n\n> [!NOTE]\n> Where possible, approximate release dates have been included based on useragents.io \"first seen\" data. useragents.io does not have \"first seen\" dates prior to June 2020. However, these browsers' Baseline compatibility is determined by their Chromium or Gecko version, so their release dates are more informative than critical.\n\nThis data is updated on a daily basis using a [script](https://github.com/web-platform-dx/web-features/tree/main/scripts/refresh-downstream.ts) triggered by a GitHub [action](https://github.com/web-platform-dx/web-features/tree/main/.github/workflows/refresh_downstream.yml). Useragents.io provides a private API for this module which exposes the last 7 days of newly seen user agents for the currently tracked browsers. If a new major version of one of the tracked browsers is encountered with a Chromium version that meets or exceeds the previous latest version of that browser, it is added to the [src/data/downstream-browsers.json](src/data/downstream-browsers.json) file with the date it was first seen by useragents.io as its release date.\n\nKaiOS is an exception - its upstream version mappings are handled separately from the other browsers because they happen very infrequently.\n\n### List of downstream browsers\n\n| Browser               | ID                        | Core    | Source                    |\n| --------------------- | ------------------------- | ------- | ------------------------- |\n| Chrome                | `chrome`                  | `true`  | MDN `browser-compat-data` |\n| Chrome for Android    | `chrome_android`          | `true`  | MDN `browser-compat-data` |\n| Edge                  | `edge`                    | `true`  | MDN `browser-compat-data` |\n| Firefox               | `firefox`                 | `true`  | MDN `browser-compat-data` |\n| Firefox for Android   | `firefox_android`         | `true`  | MDN `browser-compat-data` |\n| Safari                | `safari`                  | `true`  | MDN `browser-compat-data` |\n| Safari on iOS         | `safari_ios`              | `true`  | MDN `browser-compat-data` |\n| Opera                 | `opera`                   | `false` | MDN `browser-compat-data` |\n| Opera Android         | `opera_android`           | `false` | MDN `browser-compat-data` |\n| Samsung Internet      | `samsunginternet_android` | `false` | MDN `browser-compat-data` |\n| WebView Android       | `webview_android`         | `false` | MDN `browser-compat-data` |\n| QQ Browser Mobile     | `qq_android`              | `false` | useragents.io             |\n| UC Browser Mobile     | `uc_android`              | `false` | useragents.io             |\n| Yandex Browser Mobile | `ya_android`              | `false` | useragents.io             |\n| KaiOS                 | `kai_os`                  | `false` | Manual                    |\n| Facebook for Android  | `facebook_android`        | `false` | useragents.io             |\n| Instagram for Android | `instagram_android`       | `false` | useragents.io             |\n\n> [!NOTE]\n> All the non-core browsers currently included implement Chromium or Gecko. Their inclusion in any of the above methods is based on the Baseline feature set supported by the Chromium or Gecko version they implement, not their release date.\n",
    "licenseText": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/baseline-browser-mapping/-/baseline-browser-mapping-2.8.6.tgz#c37dea4291ed8d01682f85661dbe87967028642e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/baseline-browser-mapping/-/baseline-browser-mapping-2.8.6.tgz",
    "hash": "c37dea4291ed8d01682f85661dbe87967028642e",
    "integrity": "sha512-wrH5NNqren/QMtKUEEJf7z86YjfqW/2uw3IL3/xpqZUC95SSVIFXYQeeGjL6FT/X68IROu6RMehZQS5foy2BXw==",
    "registry": "npm",
    "packageName": "baseline-browser-mapping",
    "cacheIntegrity": "sha512-wrH5NNqren/QMtKUEEJf7z86YjfqW/2uw3IL3/xpqZUC95SSVIFXYQeeGjL6FT/X68IROu6RMehZQS5foy2BXw== sha1-w33qQpHtjQFoL4VmHb6HlnAoZC4="
  },
  "registry": "npm",
  "hash": "c37dea4291ed8d01682f85661dbe87967028642e"
}