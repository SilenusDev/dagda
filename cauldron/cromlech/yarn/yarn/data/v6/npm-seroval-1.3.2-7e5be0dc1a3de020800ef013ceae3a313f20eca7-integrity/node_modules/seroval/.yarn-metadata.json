{
  "manifest": {
    "name": "seroval",
    "type": "module",
    "version": "1.3.2",
    "files": [
      "dist",
      "src"
    ],
    "engines": {
      "node": ">=10"
    },
    "license": "MIT",
    "keywords": [
      "pridepack"
    ],
    "devDependencies": {
      "@types/node": "^22.15.12",
      "@vitest/ui": "^3.1.3",
      "pridepack": "2.6.4",
      "ts-prune": "^0.10.3",
      "tslib": "^2.8.1",
      "typescript": "^5.8.3",
      "vitest": "^3.1.3"
    },
    "scripts": {
      "prepublishOnly": "pridepack clean && pridepack build",
      "build": "pridepack build",
      "type-check": "pridepack check",
      "clean": "pridepack clean",
      "watch": "pridepack watch",
      "start": "pridepack start",
      "dev": "pridepack dev",
      "test": "vitest",
      "test:ui": "vitest --ui",
      "prune": "ts-prune"
    },
    "private": false,
    "description": "Stringify JS values",
    "repository": {
      "url": "https://github.com/lxsmnsyc/seroval.git",
      "type": "git"
    },
    "homepage": "https://github.com/lxsmnsyc/seroval/tree/main/packages/seroval",
    "bugs": {
      "url": "https://github.com/lxsmnsyc/seroval/issues"
    },
    "publishConfig": {
      "access": "public"
    },
    "author": {
      "name": "Alexis Munsayac"
    },
    "types": "./dist/types/index.d.ts",
    "main": "./dist/cjs/production/index.cjs",
    "module": "./dist/esm/production/index.mjs",
    "exports": {
      ".": {
        "types": "./dist/types/index.d.ts",
        "development": {
          "require": "./dist/cjs/development/index.cjs",
          "import": "./dist/esm/development/index.mjs"
        },
        "require": "./dist/cjs/production/index.cjs",
        "import": "./dist/esm/production/index.mjs"
      }
    },
    "typesVersions": {
      "*": {}
    },
    "gitHead": "c1e47dd1233aaec1d4fae82c5776c31d5850def9",
    "_registry": "npm",
    "_loc": "/yarn-cache/v6/npm-seroval-1.3.2-7e5be0dc1a3de020800ef013ceae3a313f20eca7-integrity/node_modules/seroval/package.json",
    "readmeFilename": "README.md",
    "readme": "# seroval\n\n> Stringify JS values\n\n[![NPM](https://img.shields.io/npm/v/seroval.svg)](https://www.npmjs.com/package/seroval) [![JavaScript Style Guide](https://badgen.net/badge/code%20style/airbnb/ff5a5f?icon=airbnb)](https://github.com/airbnb/javascript)\n\n## Install\n\n```bash\nnpm install --save seroval\n```\n\n```bash\nyarn add seroval\n```\n\n```bash\npnpm add seroval\n```\n\n## Usage\n\n```js\nimport { serialize } from 'seroval';\n\nconst object = {\n  number: [Math.random(), -0, NaN, Infinity, -Infinity],\n  string: ['hello world', '<script>Hello World</script>'],\n  boolean: [true, false],\n  null: null,\n  undefined: undefined,\n  bigint: 9007199254740991n,\n  array: [,,,], // holes\n  regexp: /[a-z0-9]+/i,\n  date: new Date(),\n  map: new Map([['hello', 'world']]),\n  set: new Set(['hello', 'world']),\n};\n\n// self cyclic references\n// recursive objects\nobject.self = object;\n// recursive arrays\nobject.array.push(object.array);\n// recursive maps\nobject.map.set('self', object.map);\n// recursive sets\nobject.set.add(object.set);\n\n// mutual cyclic references\nobject.array.push(object.map);\nobject.map.set('mutual', object.set);\nobject.set.add(object.array);\n\nconst result = serialize(object);\nconsole.log(result);\n```\n\nOutput (as a string):\n\n```js\n((h,j,k,m,o)=>(o={number:[0.5337763749243287,-0,0/0,1/0,-1/0],string:[\"hello world\",\"\\x3Cscript>Hello World\\x3C/script>\"],boolean:[!0,!1],null:null,undefined:void 0,bigint:9007199254740991n,array:h=[,,,,k=(j=[],new Map([[\"hello\",\"world\"],[\"mutual\",m=new Set([\"hello\",\"world\"])]]))],regexp:/[a-z0-9]+/i,date:new Date(\"2023-12-07T17:28:57.909Z\"),map:k,set:m},h[3]=h,k.set(\"self\",k),m.add(m).add(h),o.self=o,o))()\n\n// Formatted for readability\n((h, j, k, m, o) => (\n  (o = {\n    number: [0.5337763749243287, -0, 0 / 0, 1 / 0, -1 / 0],\n    string: [\"hello world\", \"\\x3Cscript>Hello World\\x3C/script>\"],\n    boolean: [!0, !1],\n    null: null,\n    undefined: void 0,\n    bigint: 9007199254740991n,\n    array: (h = [\n      ,\n      ,\n      ,\n      ,\n      (k =\n        ((j = []),\n        new Map([\n          [\"hello\", \"world\"],\n          [\"mutual\", (m = new Set([\"hello\", \"world\"]))],\n        ]))),\n    ]),\n    regexp: /[a-z0-9]+/i,\n    date: new Date(\"2023-12-07T17:28:57.909Z\"),\n    map: k,\n    set: m,\n  }),\n  (h[3] = h),\n  k.set(\"self\", k),\n  m.add(m).add(h),\n  (o.self = o),\n  o\n))();\n```\n\n## Docs\n\n- [Serialization](https://github.com/lxsmnsyc/seroval/blob/main/docs/serialization.md)\n- [Compatibility](https://github.com/lxsmnsyc/seroval/blob/main/docs/compatibility.md)\n- [Isomorphic References](https://github.com/lxsmnsyc/seroval/blob/main/docs/isomorphic-refs.md)\n\n## Sponsors\n\n![Sponsors](https://github.com/lxsmnsyc/sponsors/blob/main/sponsors.svg?raw=true)\n\n## License\n\nMIT Â© [lxsmnsyc](https://github.com/lxsmnsyc)\n",
    "licenseText": "MIT License Copyright (c) 2025 Alexis Munsayac <alexis.munsayac@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next paragraph) shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/seroval/-/seroval-1.3.2.tgz#7e5be0dc1a3de020800ef013ceae3a313f20eca7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/seroval/-/seroval-1.3.2.tgz",
    "hash": "7e5be0dc1a3de020800ef013ceae3a313f20eca7",
    "integrity": "sha512-RbcPH1n5cfwKrru7v7+zrZvjLurgHhGyso3HTyGtRivGWgYjbOmGuivCQaORNELjNONoK35nj28EoWul9sb1zQ==",
    "registry": "npm",
    "packageName": "seroval",
    "cacheIntegrity": "sha512-RbcPH1n5cfwKrru7v7+zrZvjLurgHhGyso3HTyGtRivGWgYjbOmGuivCQaORNELjNONoK35nj28EoWul9sb1zQ== sha1-flvg3Bo94CCADvATzq46MT8g7Kc="
  },
  "registry": "npm",
  "hash": "7e5be0dc1a3de020800ef013ceae3a313f20eca7"
}